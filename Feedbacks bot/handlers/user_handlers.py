from aiogram import Bot, Dispatcher, Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import StateFilter
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from config_data import config as cfg
import aiogram.types as types

config = cfg.load_config(r'.env')


class FSM(StatesGroup):
    pin_scan = State()
    pin_number = State()


storage = MemoryStorage()
router = Router()


@router.message(CommandStart())
async def start(message: Message, bot: Bot):
    try:
        start_photo = types.FSInputFile('start_photo.png')
        await bot.send_photo(
            photo=start_photo,
            chat_id=message.from_user.id,
            caption="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥—ã –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–æ—Ç–µ –º–∞–≥–∞–∑–∏–Ω–∞ Supershop\n\n–£ –Ω–∞—Å –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–∞–º—ã–µ –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º")
    except:
        await bot.send_message(
            chat_id=message.from_user.id,
            text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥—ã –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–æ—Ç–µ –º–∞–≥–∞–∑–∏–Ω–∞ Supershop\n\n–£ –Ω–∞—Å –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–∞–º—ã–µ –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º")

    await bot.send_message(
        text="–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –Ω–∞—Å –∏ –º—ã –ø–æ–¥–∞—Ä–∏–º –≤–∞–º 300 —Ä—É–±–ª–µ–π –≤ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!\n\n"
             "–≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ: https://www.wildberries.ru/",
        chat_id=message.from_user.id,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–Ø —É–∂–µ –æ—Å—Ç–∞–≤–∏–ª/–∞ –æ—Ç–∑—ã–≤üòä",
                                                                                 callback_data="go_pin")]]))


@router.callback_query(F.data == "go_pin")
async def pin_photo(callback: CallbackQuery, bot: Bot, state: FSMContext):
    await callback.answer()
    await callback.message.delete()
    await state.set_state(FSM.pin_scan)
    photo = types.FSInputFile('example_photo.png')

    await bot.send_photo(photo=photo,
                         chat_id=callback.from_user.id,
                         caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç (—Ñ–æ—Ç–æ) –≤–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞, –≥–¥–µ –≤–∏–¥–Ω–æ –≤–∞—Å, –æ—Ü–µ–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç —Å–∞–º–æ–≥–æ –æ—Ç–∑—ã–≤–∞‚ò∫Ô∏è\n"
                                 "<b>(–ü—Ä–∏–º–µ—Ä –≤—ã—à–µ)</b>")


@router.message(StateFilter(FSM.pin_scan))
async def pinned_photo(message: Message, bot: Bot, state: FSMContext):
    if message.photo:
        await state.set_state(FSM.pin_number)
        await message.reply(text="–°–ø–∞—Å–∏–±–æ! –°—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤—ã—à–ª–µ—Ç –≤–∞–º –ø–æ–¥–∞—Ä–æ–∫!\n\n"
                                 "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à –º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –º—ã –∑–Ω–∞–ª–∏ –∫—É–¥–∞ –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å (—Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞–Ω–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏)\n\n"
                                 "–ù–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫:\n"
                                 "+78005553535")

        await state.update_data({"photo": message.photo[-1].file_id})
        data = await state.get_data()
    else:
        await message.reply(text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ <i>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é</i> –≤ —á–∞—Ç —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤")


@router.message(StateFilter(FSM.pin_number))
async def pinned_number(message: Message, bot: Bot, state: FSMContext):
    await message.reply(text="–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –≤–∞—à –ø–æ–¥–∞—Ä–æ–∫ –æ–∫–∞–∂–µ—Ç—Å—è —É –≤–∞—Åüòä\n\n"
                             "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞—ë—Ç–µ—Å—å —Å –Ω–∞–º–∏!\n\n"
                             "–¢–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ (—Å–∫–∏–¥–∫–∞ –¥–æ 60%):\n"
                             "https://www.wildberries.ru/your_link")

    data = await state.get_data()
    photo = data.get('photo')
    manager_id = config.tg_bot.manager_id
    await bot.send_photo(chat_id=manager_id,
                         photo=photo,
                         caption="‚úÖ –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ —Ç–æ–≤–∞—Ä–µ\n\n"
                                 f"‚úçÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.text}",
                         reply_markup=InlineKeyboardMarkup(
                             inline_keyboard=[[InlineKeyboardButton(text="‚òëÔ∏è –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω",
                                                                    callback_data="gift_sent")]]))
    await state.clear()


@router.callback_query(F.data == "gift_sent")
async def gift_sent(callback: CallbackQuery, bot: Bot):
    await callback.message.delete_reply_markup()
    await callback.message.edit_caption(
        caption=f"{callback.message.caption}\n\nüéÅ –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω üéÅ")
    try:
        await bot.send_message(
            "–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ 300 —Ä—É–±–ª–µ–π –ø–æ –Ω–æ–º–µ—Ä—É, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤–∞–º–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏!")
    finally:
        pass
